#!/bin/sh
set -e -u -o pipefail

if [ "$VPN_PROTOCOL" -ne "wireguard" ]; then
  exit 0
fi

rm -f /app/config/wgtoken

# Retry login if no token is generated
while :; do
    # Get the token
    tokenResponse=$(curl -s -u "$USERNAME:$PASSWORD" \
    "https://www.privateinternetaccess.com/gtoken/generateToken")

    if [[ $(echo "$tokenResponse" | jq -r '.status') != "OK" ]]; then
        echo "ERROR: Authentication failed. PIA Username/Password is incorrect."
        exit 1
    fi

    token=$(echo "$tokenResponse" | jq -r '.token')
done

# Get region data
allRegions=$(curl -s https://serverlist.piaservers.net/vpninfo/servers/v6 | head -1)

# Get the selected region
regionData="$(echo "$allRegions" | jq --arg REGION_ID "$REGION" -r '.regions[] | select(.id==$REGION_ID)')"
if [[ -z $regionData ]]; then
    echo "REGION_ID `$REGION` is not valid."
    exit 1
fi

WG_SERVER_IP=$(echo "$regionData" | jq -r '.servers.wg[0].ip')
WG_HOSTNAME=$(echo "$regionData" | jq -r '.servers.wg[0].cn')

# Create ephemeral wireguard keys.
privKey=$(wg genkey)
pubKey=$(echo "$privKey" | wg pubk

echo "Connecting to PIA WireGuard API on $WG_SERVER_IP..."

wireguard_json="$(curl -s -G \
  --connect-to "$WG_HOSTNAME::$WG_SERVER_IP:" \
  --cacert "/etc/ssl/certs/ca.rsa.4096.crt" \
  --data-urlencode "pt=${PIA_TOKEN}" \
  --data-urlencode "pubkey=$pubKey" \
  "https://${WG_HOSTNAME}:1337/addKey")"

# Check if the API returned OK and stop this script if it didn't.
if [[ $(echo "$wireguard_json" | jq -r '.status') != "OK" ]]; then
  >&2 echo "Server did not return OK. Stopping now."
  exit 1
fi

echo "Disabling existing connections..."
wg-quick down pia && echo "done"

# Create the WireGuard config based on the JSON received from the API
echo -n "Creating wireguard config..."
mkdir -p /etc/wireguard

cat << EOF > /etc/wireguard/pia.conf
[Interface]
Address = $(echo "$wireguard_json" | jq -r '.peer_ip')
PrivateKey = $privKey
DNS = $(echo "$wireguard_json" | jq -r '.dns_servers[0]')
[Peer]
# Keep the NAT active on firewalls
PersistentKeepalive = 25
PublicKey = $(echo "$wireguard_json" | jq -r '.server_key')
AllowedIPs = 0.0.0.0/0
Endpoint = ${WG_SERVER_IP}:$(echo "$wireguard_json" | jq -r '.server_port')
EOF

# Start the WireGuard interface.
#
# If you get DNS errors just hardcode /etc/resolv.conf to "nameserver
# 10.0.0.242".
echo "Starting the wireguard interface..."
wg-quick up pia || exit 1

#!/bin/sh
set -e -u -o pipefail

# PIA might change config download URL, if that happens correct it here
PIA_OVPN_CONFIG_URL='https://www.privateinternetaccess.com/openvpn/openvpn-strong-tcp.zip'

[ ! -d /app/ovpn/config ] && mkdir -p /app/ovpn/config
# download and install the latest default recommended ovpn configs
wget -q $PIA_OVPN_CONFIG_URL -O pia_ovpn_configs.zip || (echo "ERROR: Failed to download PIA configuration files, exitting" && exit 1)
unzip -uoq pia_ovpn_configs.zip -d /app/ovpn/config
rm -f pia_ovpn_configs.zip

# copy configs to user mount
mkdir -p /config/pia
cp -u /app/ovpn/config/* /config/pia/

if [ -n "$UID" -a -n "$GID" ]; then
  chown -R "$UID:$GID" /config
fi

if [ -n "$REGION" ]; then
  REGION=$(echo $REGION | sed 's/ /_/g' | tr '[:upper:]' '[:lower:]')
  if [[ ! -f "/config/pia/${REGION}.ovpn" ]]; then
    echo "ERROR: OpenVPN configuration profile not found, check your REGION environment variable, see https://www.privateinternetaccess.com/pages/network/dkrpia for possible choices" 
    exit 1
  fi
  set -- "$@" '--config' "/config/pia/${REGION}.ovpn"
else
  echo "REGION environment variable is not set. Exiting."
  exit 1
fi

if [ -n "$USERNAME" -a -n "$PASSWORD" ]; then
  echo "$USERNAME" > auth.conf
  echo "$PASSWORD" >> auth.conf
  chmod 600 auth.conf
  set -- "$@" '--auth-nocache'
  set -- "$@" '--auth-user-pass' 'auth.conf'
else
  echo "OpenVPN credentials not set. Exiting."
  exit 1
fi

# Add masquerade to use the container as a virtual router
setup_iptables_rule=${MASQUERADE:-}
[[ "$setup_iptables_rule" == "true" ]] && /sbin/iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE

set -- "$@" '--data-ciphers' 'aes-256-cbc'

openvpn "$@"
